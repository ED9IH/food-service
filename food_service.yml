version: '3.8'

services:
  common:
    build:
      context: .
      dockerfile: DockerFile
    command: ["java", "-jar", "common-0.0.1-SNAPSHOT.jar"]
    ports:
      - "8081:8080"  # Хост:Контейнер

  delivery-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["java", "-jar", "delivery-service-0.0.1-SNAPSHOT.jar"]
    ports:
      - "8082:8080"  # Хост:Контейнер

  kitchen-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["java", "-jar", "kitchen-service-0.0.1-SNAPSHOT.jar"]
    ports:
      - "8083:8080"  # Хост:Контейнер

  migration:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["java", "-jar", "migration-0.0.1-SNAPSHOT.jar"]
    ports:
      - "8084:8080"  # Хост:Контейнер

  notificaction-service:
    build:
      context: .
      dockerfile: Dockerfile
    command: ["java", "-jar", "notificaction-service-0.0.1-SNAPSHOT.jar"]
    ports:
      - "8085:8080"  # Хост:Контейнер

#  order-service:
#    build:
#      context: .
#      dockerfile: java.DockerFile
#    command: ["java", "-jar", "order-service-0.0.1-SNAPSHOT.jar"]
#    ports:
#      - "8083:8080"  # Хост:Контейнер
#
  order-service:
      build:
        context: .
        dockerfile: java.DockerFile
      command: ["java", "-jar", "order-service-0.0.1-SNAPSHOT.jar"]
      ports:
        - "8083:8080"
      environment:
        SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/foodservice
        SPRING_DATASOURCE_USERNAME: user
        SPRING_DATASOURCE_PASSWORD: password
      depends_on:
        - postgres
  postgres:
    image: postgres
    ports:
      - "5433:5432"
    environment:
      POSTGRES_DB: foodservice
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    healthcheck:
      test: [ "CMD-SHELL", "pg_isready -U user" ]
      interval: 10s
      timeout: 5s
      retries: 5
    volumes:
      - ./migration/src/main/resources/db/changelog/create-table-v1.0/create_table_for_docker.sql:/docker-entrypoint-initdb.d/create_table_for_docker.sql
